<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org/DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd" >

<configuration>
    <!--  JDBC Driver Class and Database Connection Setting  -->
    <!--  별도의 외부파일에 작성해서 해당 파일을 property로 가져와서 사용  -->

    <properties resource="./driver.properties" />

    <!--  MyBatis 실행 설정을 해야 함  -->
    <!-- 대부분은 default설정을 이용함   -->
    <settings>
        <!--    데이터가 없는 경우 자바에서 Null로 표현할 것인지    -->
        <setting name="jdbcTypeForNull" value="NULL" />
    </settings>
    <!--  type alias가 나올 수 있다  -->
    <!--  일반적으로 VO에 대한 alias가 설정됩니다  -->
    <typeAliases>
        <typeAlias alias="BookVO" type="org.example.helloservletproject.vo.BookVO" />
        <typeAlias alias="BookRequestDTO" type="org.example.helloservletproject.dto.BookRequestDTO" />
    </typeAliases>



    <!-- DB연결정보   -->
    <environments default="development">
        <environment id="development">
            <!--      transaction Manager을 JDBC로 설정하면
                  수동으로 transaction 설정한다는 의미
                  commit(), rollback()을 코드에서 제거 => JDBC
                  만약 type이 MANAGED로 설정하면 자동으로 transaction을 제어하게 할 수 있다.
                  -->
            <transactionManager type="JDBC" />
            <!-- Connection pool을 사용할지 여부를 설정할 수 있다.-->
            <dataSource type="POOLED">
                <property name="driver" value="${db.driver}" />
                <property name="url" value="${db.url}" />
                <property name="username" value="${db.username}" />
                <property name="password" value="${db.password}" />

            </dataSource>
        </environment>
    </environments>

    <!-- SQL구문을 작성하는 mapper라는 xml파일의 경로 지정 -->
    <mappers>
        <mapper resource="./sqlmap/Book.xml" />
    </mappers>

</configuration>