-- 실습 10
-- 거래 테이블에서 계좌별 누적 거래 금액을 계산하시오.

SELECT ACCOUNT_ID,
    SUM(AMOUNT) OVER (PARTITION BY ACCOUNT_ID) AS CUM_AMOUNT
FROM TRANSACTIONS;

SELECT ACCOUNT_ID,
      CUM_AMOUNT FROM (
          SELECT ACCOUNT_ID,
              SUM(AMOUNT) OVER (PARTITION BY ACCOUNT_ID) AS CUM_AMOUNT,
              ROW_NUMBER() OVER (PARTITION BY ACCOUNT_ID ORDER BY AMOUNT) AS ROW_NUM
          FROM TRANSACTIONS
)
WHERE ROW_NUM = 1;

-- 각 계좌별 거래 금액의 최고 거래 금액 대비 비율을 출력하시오.(AMOUNT / MAX AMOUNT)
SELECT ACCOUNT_ID,
    TRANSACTION_ID,
    AMOUNT/MAX(AMOUNT) OVER (PARTITION BY ACCOUNT_ID) AS PERCENT_AMOUNT
FROM TRANSACTIONS;

-- 대출 테이블에서 지점별 누적 대출 금액을 계산
SELECT BRANCH_ID,
    SUM(AMOUNT) OVER (PARTITION BY BRANCH_ID ORDER BY LOAN_DATE ROWS UNBOUNDED PRECEDING) AS CUM_AMOUNT
FROM LOANS;

SELECT BRANCH_ID, CUM_AMOUNT FROM (
    SELECT BRANCH_ID,
        SUM(AMOUNT) OVER (PARTITION BY BRANCH_ID ORDER BY LOAN_DATE ROWS UNBOUNDED PRECEDING) AS CUM_AMOUNT,
        ROW_NUMBER() OVER (PARTITION BY BRANCH_ID ORDER BY AMOUNT) AS ROW_NUM
    FROM LOANS
    )
WHERE ROW_NUM = 1;

-- 계좌 테이블에서 고객별 평균 잔액 계산(반올림하여 소수점 둘째 자리까지 출력.)
SELECT CUSTOMER_ID,
      ROUND(AVG(BALANCE) OVER (PARTITION BY CUSTOMER_ID),2) AS AVG_BALANCE
FROM ACCOUNTS;

SELECT CUSTOMER_ID,
      AVG_BALANCE  
FROM (
    SELECT CUSTOMER_ID,
        ROUND(AVG(BALANCE) OVER (PARTITION BY CUSTOMER_ID),2) AS AVG_BALANCE,
        ROW_NUMBER() OVER (PARTITION BY CUSTOMER_ID ORDER BY BALANCE) AS ROW_NUM
    FROM ACCOUNTS
    )
WHERE ROW_NUM = 1;
